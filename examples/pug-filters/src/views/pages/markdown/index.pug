extends Views/layouts/default.pug

include Views/mixins/code.pug

//- set variables used in layout
block variables
  - const title = ':markdown'

//- add page specifically styles
append style
  link(rel='stylesheet' href=require('./styles.scss'))

//- add page specifically scripts
append script

block content
  section
    .container
      p The #[:code :markdown] filter transform markdown to HTML and highlights code syntax.

  section
    .container
      h2 Enable filter

      p.
        The #[:code :markdown] filter require the #[a(href="https://github.com/markdown-it/markdown-it") markdown-it] module.<br>
      +code npm install -D markdown-it

      p Defaults, the filter is disabled. If this filter is used, it must be enabled in #[:code webpack.config.js].

      h3 Enable default markdown
      div Use the Pug loader options in the webpack config:
      +code: :highlight(js)
        {
          test: /\.pug$/,
          loader: '@webdiscus/pug-loader',
          options: {
            // enable embedded filters
            embedFilters: {
              // enable :markdown filter
              markdown: true,
            },
          },
        },

      div.
        If the option is boolean #[:code true] or #[:code {}] then is used default #[:code markdown-it] options.<br>
        #[b Note:] Defaults the highlighting of code blocks is disabled.

      h3 Enable markdown with language prefix
      div.
        The option #[:code langPrefix {string}] is CSS language prefix for #[:code pre] tag.
        Can be useful for external highlighters used in browser.<br>
        Add the options in the webpack config:

      +code: :highlight(js)
        {
          test: /\.pug$/,
          loader: '@webdiscus/pug-loader',
          options: {
            // enable embedded filters
            embedFilters: {
              // enable :markdown filter
              markdown: {
                langPrefix: 'language-'
              },
            },
          },
        },

      h3 Enable markdown with highlighting
      div Highlighting requires the npm module:
      +code npm install -D prismjs

      div To enable highlights code blocks in markdown add the #[:code highlight {object}] option to config:

      +code: :highlight(js)
        {
          test: /\.pug$/,
          loader: '@webdiscus/pug-loader',
          options: {
            // enable embedded filters
            embedFilters: {
              // enable :markdown filter
              markdown: {
                // enable highlighting in markdown
                highlight: {
                  verbose: true,
                  use: 'prismjs',
                },
              },
            },
          },
        },

      p The #[:code highlight] options:
      ul
        li #[:code verbose {boolean}] Enable output process info in console. Use it in #[:code development] mode only. Defaults is #[:code false].<br>
        li.
          #[:code use {string}] The name of a highlighting npm module. The module must be installed.
          Currently, is supported the #[a(href="https://prismjs.com") prismjs] only.
      div.
        #[b Note:] if the #[:code highlight] option is used then the #[:code langPrefix] is ignored.
        The language prefix for #[:code pre] tag will be determined by the used highlighting module.

  section
    .container
      h2 Markdown

      div Usage example:
      +code: :highlight(pug)
        :markdown
          ```md
          ## Hello world

          You can write text [with links](http://example.com) inline or [link references][1].

          * one _thing_ has *em*phasis
          * two __things__ are **bold**

          [1]: http://example.com
          ```

      b Result:
      :markdown
        ## Hello world

        You can write text [with links](http://example.com) inline or [link references][1].

        * one _thing_ has *em*phasis
        * two __things__ are **bold**

        [1]: http://example.com

  section
    .container
      h2 Highlight a code syntax in markdown

      div Usage example:
      +code: :highlight(pug)
        :markdown
          _HTML_
          ```html
          <!-- Comment -->
          <div class="container">
            <p>Paragraph</p>
          </div>
          ```

          _JavaScript_
          ```js
          const arr = [1, 2, 'banana'];
          ```

      b Result:
      :markdown
        _HTML_
        ```html
        <!-- Comment -->
        <div class="container">
          <p>Paragraph</p>
        </div>
        ```
        _JavaScript_
        ```js
        const arr = [1, 2, 'banana'];
        ```

  section
    .container
      h2 Highlighted code examples

      include:markdown samples/markdown.md
